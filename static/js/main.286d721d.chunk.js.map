{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearGood","setState","this","className","type","onClick","map","good","isGoodSelected","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,UAAY,WACV,EAAKC,SAAS,CAAEF,aAAc,MANlC,4CASE,WAAU,IAAD,OACCA,EAAiBG,KAAKJ,MAAtBC,aAER,OACE,uBAAMI,UAAU,oBAAhB,UACKJ,EAGC,qBAAII,UAAU,sCAAd,oBACMJ,EADN,gBAIE,wBACE,UAAQ,cACRK,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKF,eAVlB,oBAAIG,UAAU,QAAd,+BAeJ,uBAAOA,UAAU,QAAjB,SACGP,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAiBT,IAAiBQ,EAExC,OACE,gCACE,qBACE,UAAQ,OACRJ,UAAWM,IACT,CACE,+BAAgCD,IAJtC,UASE,6BACKA,EAiBC,wBACE,UAAQ,eACRJ,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKL,UAJhB,eAfA,wBACE,UAAQ,YACRI,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKJ,SAAS,CACZF,aAAcQ,KANpB,iBA0BN,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,QAxCKA,eAnC1B,GAAyBG,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.286d721d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {(!selectedGood)\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearGood}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          {goods.map((good) => {\n            const isGoodSelected = selectedGood === good;\n\n            return (\n              <tbody key={good}>\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames(\n                    {\n                      'has-background-success-light': isGoodSelected,\n                    },\n                  )}\n                >\n\n                  <td>\n                    {!(isGoodSelected)\n                      ? (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.setState({\n                              selectedGood: good,\n                            });\n                          }}\n                        >\n                          +\n                        </button>\n                      )\n\n                      : (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.clearGood}\n                        >\n                          -\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}